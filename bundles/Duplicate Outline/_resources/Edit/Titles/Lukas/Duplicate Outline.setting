{
	Tools = ordered() {
		DuplicateOutline = MacroOperator {
			Inputs = ordered() {
				Input1 = InstanceInput {
					SourceOp = "Text1",
					Source = "StyledText",
					Name = "Text ",
				},
				Input2 = InstanceInput {
					SourceOp = "Text1",
					Source = "Font",
					ControlGroup = 2,
				},
				Input3 = InstanceInput {
					SourceOp = "Text1",
					Source = "Style",
					ControlGroup = 2,
				},
				Input4 = InstanceInput {
					SourceOp = "Text1",
					Source = "Red1Clone",
					Name = "Color",
					ControlGroup = 3,
					Default = 1,
				},
				Input5 = InstanceInput {
					SourceOp = "Text1",
					Source = "Size",
					Default = 0.08,
				},
				Input6 = InstanceInput {
					SourceOp = "BG",
					Source = "TopLeftRed",
					Name = "BG Color",
					ControlGroup = 5,
					Default = 0,
				}
			},
			Outputs = {
				MainOutput1 = InstanceOutput {
					SourceOp = "MediaOut1",
					Source = "Output",
				},
				Output1 = InstanceOutput {
					SourceOp = "Path1",
					Source = "Heading",
				},
				Output2 = InstanceOutput {
					SourceOp = "Path2",
					Source = "Heading",
				},
				Output3 = InstanceOutput {
					SourceOp = "Path2Displacement",
					Source = "Value",
				}
			},
			ViewInfo = GroupInfo { Pos = { 0, 0 } },
			Tools = ordered() {
				MediaOut1 = MediaOut {
					Inputs = {
						Index = Input { Value = "0", },
						Input = Input {
							SourceOp = "MultiMerge1",
							Source = "Output",
						}
					},
					ViewInfo = OperatorInfo { Pos = { 1055.33, 110.712 } },
				},
				DuplicateUp = Fuse.Duplicate {
					CtrlWZoom = false,
					NameSet = true,
					Inputs = {
						Copies = Input {
							SourceOp = "DuplicateUpCopies",
							Source = "Value",
						},
						Center = Input {
							SourceOp = "Path1",
							Source = "Position",
						},
						Polyline = Input {
							Value = Polyline {
							},
						},
						Background = Input {
							SourceOp = "Instance_Text1",
							Source = "Output",
						}
					},
					ViewInfo = OperatorInfo { Pos = { 778.667, 31.2727 } },
				},
				DuplicateUpCopies = BezierSpline {
					SplineColor = { Red = 38, Green = 236, Blue = 71 },
					CtrlWZoom = false,
					KeyFrames = {
						[0] = { 0, RH = { 5.2, -0.04 }, Flags = { Linear = true } },
						[20] = { 5, LH = { 13.3340001106262, 5 }, RH = { 23.3329999446869, 5 } },
						[30] = { 0, LH = { 26.2, 0 } }
					}
				},
				Path1 = PolyPath {
					DrawMode = "InsertAndModify",
					CtrlWZoom = false,
					Inputs = {
						Displacement = Input {
							SourceOp = "Path1Displacement",
							Source = "Value",
						},
						PolyLine = Input {
							Value = Polyline {
								Points = {
									{ Linear = true, LockY = true, X = 0, Y = 0.11, RX = 0, RY = 0.01 },
									{ Linear = true, LockY = true, X = 0, Y = 0.14, LX = 0, LY = -0.01, RX = 0, RY = -0.01 },
									{ Linear = true, LockY = true, X = 0, Y = 0.11, LX = 0, LY = 0.01 }
								}
							},
						}
					},
				},
				Path1Displacement = BezierSpline {
					SplineColor = { Red = 255, Green = 0, Blue = 255 },
					CtrlWZoom = false,
					KeyFrames = {
						[0] = { 0, RH = { 6.66666666666667, 0.166666666666667 }, Flags = { LockedY = true } },
						[20] = { 0.5, LH = { 13.3333333333333, 0.333333333333333 }, RH = { 23.3333333333333, 0.666666666666667 }, Flags = { Linear = true, LockedY = true } },
						[30] = { 1, LH = { 26.6666666666667, 0.833333333333333 }, Flags = { Linear = true, LockedY = true } }
					}
				},
				DuplicateDown = Fuse.Duplicate {
					NameSet = true,
					Inputs = {
						Copies = Input {
							SourceOp = "DuplicateDownCopies",
							Source = "Value",
						},
						Center = Input {
							SourceOp = "Path2",
							Source = "Position",
						},
						Polyline = Input {
							Value = Polyline {
							},
						},
						Background = Input {
							SourceOp = "Instance_Text1",
							Source = "Output",
						}
					},
					ViewInfo = OperatorInfo { Pos = { 720.667, 63.3333 } },
				},
				DuplicateDownCopies = BezierSpline {
					SplineColor = { Red = 38, Green = 236, Blue = 71 },
					CtrlWZoom = false,
					KeyFrames = {
						[0] = { 0, RH = { 4.4, 0 }, Flags = { Linear = true } },
						[20] = { 5, LH = { 13.3340001106262, 5 }, RH = { 23.3329999446869, 5 } },
						[30] = { 0, LH = { 26.6, 0 } }
					}
				},
				Path2 = PolyPath {
					DrawMode = "InsertAndModify",
					CtrlWZoom = false,
					Inputs = {
						Displacement = Input {
							SourceOp = "Path2Displacement",
							Source = "Value",
						},
						PolyLine = Input {
							Value = Polyline {
								Points = {
									{ Linear = true, LockY = true, X = 0, Y = -0.13, RX = 0, RY = -0.00333333333333334 },
									{ Linear = true, LockY = true, X = 0, Y = -0.14, LX = 0, LY = 0.00333333333333334, RX = 0, RY = 0.00333333333333334 },
									{ Linear = true, LockY = true, X = 0, Y = -0.13, LX = 0, LY = -0.00333333333333334 }
								}
							},
						}
					},
				},
				Path2Displacement = BezierSpline {
					SplineColor = { Red = 255, Green = 0, Blue = 255 },
					CtrlWZoom = false,
					NameSet = true,
					KeyFrames = {
						[0] = { 0, RH = { 6.66666666666667, 0.166666666666667 }, Flags = { Linear = true, LockedY = true } },
						[20] = { 0.5, LH = { 13.3333333333333, 0.333333333333333 }, RH = { 23.3333333333333, 0.666666666666667 }, Flags = { Linear = true, LockedY = true } },
						[30] = { 1, LH = { 26.6666666666667, 0.833333333333333 }, Flags = { Linear = true, LockedY = true } }
					}
				},
				Text1 = TextPlus {
					Inputs = {
						Width = Input { Value = 1920, },
						Height = Input { Value = 1080, },
						UseFrameFormatSettings = Input { Value = 1, },
						["Gamut.SLogVersion"] = Input { Value = FuID { "SLog2" }, },
						LayoutRotation = Input { Value = 1, },
						CharacterSpacing = Input { Value = 1.02, },
						TransformRotation = Input { Value = 1, },
						SelectElement = Input { Value = 1, },
						Select = Input { Value = 1, },
						Name2 = Input { Value = "White Outline", },
						Softness1 = Input { Value = 1, },
						StyledText = Input {
							SourceOp = "Follower1",
							Source = "StyledText",
						},
						Font = Input { Value = "Gotham", },
						Style = Input { Value = "Black", },
						VerticalJustificationNew = Input { Value = 3, },
						HorizontalJustificationNew = Input { Value = 3, },
						Red2 = Input { Value = 0.5529411764706, },
						Green2 = Input { Value = 0.5529411764706, },
						Blue2 = Input { Value = 0.5529411764706, },
						Softness2 = Input { Value = 1, }
					},
					ViewInfo = OperatorInfo { Pos = { 595.333, 81.9091 } },
				},
				Follower1 = StyledTextFollower {
					CtrlWZoom = false,
					Inputs = {
						Order = Input { Value = 7, },
						Text = Input {
							Value = StyledText {
								Value = "What is Code Connect?"
							},
						},
						TransformRotation = Input { Value = 1, },
						Softness1 = Input { Value = 1, },
						Softness2 = Input { Value = 1, },
						Softness3 = Input { Value = 1, },
						Softness4 = Input { Value = 1, },
						Softness5 = Input { Value = 1, },
						Softness6 = Input { Value = 1, },
						Softness7 = Input { Value = 1, },
						Softness8 = Input { Value = 1, }
					},
				},
				Instance_Text1 = TextPlus {
					SourceOp = "Text1",
					Inputs = {
						EffectMask = Input {
						},
						SettingsNest = Input {
						},
						ImageNest = Input {
						},
						["Gamut.ColorSpaceNest"] = Input {
						},
						["Gamut.GammaSpaceNest"] = Input {
						},
						Layout = Input {
						},
						LayoutRotation = Input {
							Value = 1,
						},
						Background = Input {
						},
						TransformTransform = Input {
						},
						TransformRotation = Input {
							Value = 1,
						},
						TransformPivot = Input {
						},
						TransformShear = Input {
						},
						TransformSize = Input {
						},
						SelectElement = Input {
							Value = 1,
						},
						Enabled1 = Input {
							Value = 0,
						},
						Enabled2 = Input {
							Value = 1,
						},
						Properties1 = Input {
						},
						Softness1 = Input {
							Value = 1,
						},
						Position1 = Input {
						},
						Rotation1 = Input {
						},
						PivotNest1 = Input {
						},
						Shear1 = Input {
						},
						Size1 = Input {
						},
						TextText = Input {
						},
						TabSpacing = Input {
						},
						AdvancedFontControls = Input {
						},
						ClearSelectedKerning = Input {
						},
						ClearAllKerning = Input {
						},
						ClearSelectedPlacement = Input {
						},
						ClearAllPlacement = Input {
						},
						Internal = Input {
						},
						CommentsNest = Input {
						},
						FrameRenderScriptNest = Input {
						},
						StartRenderScripts = Input {
						},
						EndRenderScripts = Input {
						},
						Properties2 = Input {
						},
						Softness2 = Input {
							Value = 1,
						},
						Position2 = Input {
						},
						Rotation2 = Input {
						},
						PivotNest2 = Input {
						},
						Shear2 = Input {
						},
						Size2 = Input {
						}
					},
					ViewInfo = OperatorInfo { Pos = { 604.667, 43.3939 } },
				},
				BG = Background {
					NameSet = true,
					Inputs = {
						Width = Input { Value = 1920, },
						Height = Input { Value = 1080, },
						UseFrameFormatSettings = Input { Value = 1, },
						["Gamut.SLogVersion"] = Input { Value = FuID { "SLog2" }, }
					},
					ViewInfo = OperatorInfo { Pos = { 603.333, 147.303 } },
				},
				MultiMerge1 = MultiMerge {
					Inputs = {
						LayerOrder = Input { Value = ScriptVal { {
									[0] = 1,
									3,
									2
								} }, },
						Background = Input {
							SourceOp = "BG",
							Source = "Output",
						},
						["Layer1.Foreground"] = Input {
							SourceOp = "DuplicateUp",
							Source = "Output",
						},
						LayerName1 = Input { Value = "Duplicate1 Layer", },
						["Layer2.Foreground"] = Input {
							SourceOp = "Text1",
							Source = "Output",
						},
						LayerName2 = Input { Value = "Text1 Layer", },
						["Layer3.Foreground"] = Input {
							SourceOp = "DuplicateDown",
							Source = "Output",
						},
						LayerName3 = Input { Value = "Duplicate1 Layer", }
					},
					ViewInfo = OperatorInfo { Pos = { 768, 240.091 } },
				}
			},
		}
	},
	ActiveTool = "DuplicateOutline"
}